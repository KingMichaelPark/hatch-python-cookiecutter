[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "{{ cookiecutter.project_slug }}"
description = '{{ cookiecutter.project_short_description }}'
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
  { name = "{{ cookiecutter.full_name }}", email = "{{ cookiecutter.email }}" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Framework :: Hatch",
]
dependencies = []
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}#readme"
Issues = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}/issues"
Source = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"

[tool.hatch.version]
path = "{{ cookiecutter.project_slug }}/__about__.py"

[tool.hatch.envs.git]
dependencies = [
  "commitizen",
  "pre-commit",
]

[tool.hatch.envs.git.scripts]
commit = "cz c {args}"
pcra = "pre-commit run --all-files"
version = "cz bump {args}"

[tool.hatch.envs.default]
dependencies = [
  "black",
  "pytest",
  "pytest-cov",
  "ruff",
]

[tool.hatch.envs.default.scripts]
cov = [
    "test-cov",
    "cov-report",
]
cov-report = [
  "- coverage combine",
  "coverage report --show-missing",
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "style",
]
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"

[tool.hatch.envs.docs]
dependencies = [
    "mkdocstrings",
    "mkdocs-material",
    "mkdocs-include-markdown-plugin"
]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build"
serve = "mkdocs serve --dirtyreload"

[[tool.hatch.envs.test.matrix]]
python = ["310", "311"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "{{ cookiecutter.project_slug }}/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]


[tool.commitizen]
name = "cz_conventional_commits"
version = "0.0.1"
tag_format = "$version"
version_files = [
    "{{ cookiecutter.project_slug }}/__about__.py"
]
